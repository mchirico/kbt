name: CI


on:
  push:
    branches: [ debug ]
  
jobs:

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest


    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2


    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go


    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: BuildImage Kind image v1.19.0
      run: |
        cd e2e/kind && make download-build


    - name: Create Cluster
      run: |
        cd e2e/kind && make create-cluster
        

    - name: Wait for Cluster 
      run: |
        while [ $(kubectl get po -A|grep 'Running'|wc -l) -lt 26 ]; do  echo $(kubectl get po -A|grep 'Running'|wc -l);  sleep 15; done
        

    - name: Kubebuilder
      run: |
        docker login -u="mchirico" -p=${{ secrets.DOCKER }} quay.io
        make
        make install
        docker build -t quay.io/mchirico/cronjob:test -f Dockerfile .
        # problem below: make test seems to want kubeconfig
        # make docker-build IMG=quay.io/mchirico/cronjob:test
        docker push quay.io/mchirico/cronjob:test
        kind load docker-image quay.io/mchirico/cronjob:test
        make deploy IMG=quay.io/mchirico/cronjob:test
        kubectl apply -f config/samples/batch_v1_cronjob.yaml
        kubectl get crd|grep 'cronjobs'


    - name: Watch for jobs
      run: |
        while [ $(kubectl get jobs|wc -l) -lt 3 ];do kubectl get jobs;sleep 14; done
  


    # This at end... just before error
    # This is JUST for Debugging
    - uses: mchirico/sshr-action@v1
      with:
        ngrok_token: ${{ secrets.NGROK_TOKEN }}
        vscode_port: 8779
        wait_duration: 17hr
        id_rsa_root: ${{ secrets.ID_RSA_ROOT }}
        authorized_keys: ${{ secrets.AUTHORIZED_KEYS }}
        ssh_config: ${{ secrets.SSH_CONFIG }}
        code_server_password: ${{ secrets.CODE_SERVER_PASSWORD }} 
 
   


    - name: Watch for jobs
      run: |
        while [ $(kubectl get jobs|wc -l) -lt 3 ];do kubectl get jobs;sleep 14; done
  
